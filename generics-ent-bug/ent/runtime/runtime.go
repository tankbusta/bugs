// Code generated by entc, DO NOT EDIT.

package runtime

import (
	"context"
	"genericserr/ent/schema"
	"genericserr/ent/tester"
	"time"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	tester.Policy = privacy.NewPolicies(schema.Tester{})
	tester.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := tester.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	testerFields := schema.Tester{}.Fields()
	_ = testerFields
	// testerDescCreatedAt is the schema descriptor for created_at field.
	testerDescCreatedAt := testerFields[3].Descriptor()
	// tester.DefaultCreatedAt holds the default value on creation for the created_at field.
	tester.DefaultCreatedAt = testerDescCreatedAt.Default.(func() time.Time)
}

const (
	Version = "v0.10.0"                                         // Version of ent codegen.
	Sum     = "h1:9cBomE1fh+WX34DPYQL7tDNAIvhKa3tXvwxuLyhYCMo=" // Sum of ent codegen.
)
